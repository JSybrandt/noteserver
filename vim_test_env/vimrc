" This VIMRC is sourced using the launch_vim.sh script. We expect the current
" working directory to be noteserver/vim_test_env. All paths are relative.

set nocompatible
set term=screen-256color
set spell spelllang=en_us
set linebreak
set wildmenu

call plug#begin('./plugged')
Plug 'tpope/vim-sensible'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/vim-lsp'
call plug#end()



" Run the noteserver-test binary when we open a .note file.
if executable('./noteserver-test')
  " pip install python-language-server
  au User lsp_setup call lsp#register_server(
        \ {'name': 'noteserver',
        \  'cmd': {server_info->['./noteserver-test']},
        \  'allowlist': ['note']})
else
  echo "FAILED TO FIND NOTESERVER"
  q
endif

function! s:on_lsp_buffer_enabled() abort
    setlocal omnifunc=lsp#complete
    setlocal signcolumn=yes
    if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
    nmap <buffer> gd <plug>(lsp-definition)
    nmap <buffer> gs <plug>(lsp-document-symbol-search)
    nmap <buffer> gS <plug>(lsp-workspace-symbol-search)
    nmap <buffer> gr <plug>(lsp-references)
    nmap <buffer> gi <plug>(lsp-implementation)
    nmap <buffer> gt <plug>(lsp-type-definition)
    nmap <buffer> <leader>rn <plug>(lsp-rename)
    nmap <buffer> [g <plug>(lsp-previous-diagnostic)
    nmap <buffer> ]g <plug>(lsp-next-diagnostic)
    nmap <buffer> K <plug>(lsp-hover)
    inoremap <buffer> <expr><c-f> lsp#scroll(+4)
    inoremap <buffer> <expr><c-d> lsp#scroll(-4)

    let g:lsp_format_sync_timeout = 1000
    autocmd! BufWritePre *.rs,*.go call execute('LspDocumentFormatSync')
endfunction

augroup lsp_install
    au!
    " call s:on_lsp_buffer_enabled only for languages that has the server registered.
    autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
